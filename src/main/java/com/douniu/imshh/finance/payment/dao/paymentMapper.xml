<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.douniu.imshh.finance.payment.dao.IPaymentDao">
    <resultMap type="Payment" id="paymentmap">
        <result property="supplierId" column="supplierId"/>
        <result property="supplierName" column="supplierName"/>
        <result property="month" column="month"/>
        <result property="debt" column="debt"/>
        <result property="payment" column="payment"/>
        <result property="lastDebt" column="lastDebt"/>
        <result property="lastPayment" column="lastPayment"/>
        <result property="currentDebt" column="currentDebt"/>
        <result property="currentPayment" column="currentPayment"/>
    </resultMap>
    
    <select id="queryPayment" parameterType="Payment" resultMap="paymentmap">
        
        select supplierId, 
               supp.supplierName,
               debt,
               payment,
               lastDebt - lastPayment as lastDebt,
               currentDebt - currentPayment as currentDebt               
               <!-- 供应商为主表 -->
          from (select id as supplierId, 
                       name as supplierName 
                  from t_supplier where status = 1
                  <if test="supplierName != null and supplierName != ''">
		          and name like #{supplierName}
		          </if>) supp
                  <!-- 查找指定月份的应付-->
          left join (select sum(payable) as debt, 
                            supplierName 
                       from view_materialin 
                      where str_to_date(month, '%Y-%m') = str_to_date(#{month}, '%Y-%m') 
                      group by supplierName) mi
             on supp.supplierName = mi.supplierName
                  <!-- 查找指定月份的已付-->
           left join (select sum(paid) as payment,
                             supplierName
                        from view_transactionout
                       where str_to_date(month, '%Y-%m') = str_to_date(#{month}, '%Y-%m')
                       group by supplierName) trano
             on supp.supplierName = trano.supplierName
                 <!-- 查找截止指定月份的前一个月的应付和已付 --> 
           left join (select tl.supplierName,
                             payable as lastDebt,
                             (case when paid is null then 0 else paid end) as lastPayment 
                       from 
                        (select sum(payable) as payable,
                                supplierName
                           from view_materialin
                          where str_to_date(month, '%Y-%m') &lt;= DATE_ADD(str_to_date(#{month}, '%Y-%m-%d'), INTERVAL -1 MONTH)
                          group by supplierName) tl
                           left join
                         (select sum(paid) as paid,
                                 supplierName
                            from view_transactionout
                           where str_to_date(month, '%Y-%m') &lt;= DATE_ADD(str_to_date(#{month}, '%Y-%m-%d'), INTERVAL -1 MONTH)
                           group by supplierName) tr
                              on tl.supplierName = tr.supplierName) ld
              on supp.supplierName = ld.supplierName
                  <!-- 截止当前月的应付和已付 -->
            left join (select tl.supplierName,
                             payable as currentDebt,
                             (case when paid is null then 0 else paid end) as currentPayment 
                       from 
                        (select sum(payable) as payable,
                                supplierName
                           from view_materialin
                          where str_to_date(month, '%Y-%m') &lt;= now()
                          group by supplierName) tl
                           left join
                         (select sum(paid) as paid,
                                 supplierName
                            from view_transactionout
                           where str_to_date(month, '%Y-%m') &lt;= now()
                           group by supplierName) tr
                              on tl.supplierName = tr.supplierName) cd
               on supp.supplierName = cd.supplierName
            order by ${orderBy} ${order}
       		limit #{pageOffset},#{pageSize}       
    </select> 
    
    <select id="countPayment" parameterType="Payment" resultType="int">
        select count(1) from t_supplier where status = 1
         <if test="supplierName != null and supplierName != ''">
           and name like #{supplierName}
         </if>
    </select>     
    
    <select id="getTotalDebt" resultType="float">
        select payable - paid from (
               select sum(payable) as payable 
                 from view_materialin)m, 
              (select sum(paid) as paid 
                 from view_transactionout
                where supplierName != '')t
    </select>
</mapper>