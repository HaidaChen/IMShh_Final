<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.douniu.imshh.finance.dashboard.dao.IMaterialViewDao">
    <resultMap type="MaterialView" id="mtlstat">
    	<result property="year" column="year"/>
        <result property="materialName" column="materialName"/>
        <result property="specification1" column="specification1"/>
        <result property="specification2" column="specification2"/>
        <result property="specification3" column="specification3"/>
        <result property="stock" column="stock"/>        
        <result property="orderQuantity" column="orderQuantity"/>
        <result property="orderAmount" column="orderAmount"/>
        <result property="useQuantity" column="useQuantity"/>
    </resultMap>
        
    <select id="queryMaterial" parameterType="MaterialView" resultMap="mtlstat">
        select m.materialname,
               m.specification1,
               m.specification2,
               m.specification3,
               ms.stock, 
               mv.orderQuantity, 
               mv.orderAmount,
               mv.useQuantity          
          from (select name as materialname, specification1, specification2, specification3 from t_material 
                 where status=1
                 <if test="materialName != null and materialName != ''">
		          and name like #{materialName}
		          </if>
                ) m
          left join
           (select amountin - (case when amountout is null then 0 else amountout end) as stock, mtlin.materialName, mtlin.specification1, mtlin.specification2, mtlin.specification3 
			  from (select sum(amount) as amountin, materialName, specification1, specification2, specification3 
			          from t_materialin 
					 group by materialName, specification1, specification2, specification3)mtlin 
			  left join (select sum(outamount - returnamount) as amountout, materialName, specification1, specification2,specification3 
			               from t_materialout group by materialName, specification1, specification2, specification3)mtlout 
			    on mtlin.materialName = mtlout.materialName 
			   and mtlin.specification1 = mtlout.specification1 
			   and mtlin.specification2 = mtlout.specification2 
			   and mtlin.specification3 = mtlout.specification3) ms
            on m.materialName = ms.materialName
           and m.specification1 = ms.specification1
           and m.specification2 = ms.specification2
           and m.specification3 = ms.specification3
          left join
          (select * from view_material 
         where year = #{year}) mv
          on m.materialName = mv.materialName
         and m.specification1 = mv.specification1
         and m.specification2 = mv.specification2
         and m.specification3 = mv.specification3
       order by ${orderBy} ${order}
       limit #{pageOffset},#{pageSize}
    </select> 
    
    <select id="countMaterial" parameterType="MaterialView" resultType="int">
        select count(1) from t_Material where status = 1
          <if test="materialName != null and materialName != ''">
          and name like #{materialName}
          </if>
    </select>   
    
    <select id="getIndicators" parameterType="String" resultType="MaterialIndicators">
        select sum(orderQuantity) orderQuantity,
               sum(useQuantity) useQuantity,
               sum(orderAmount) orderAmount
          from view_material where year = #{year}
    </select>
    
</mapper>