<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.douniu.imshh.order.dao.IOrderDao">
	<resultMap type="Order" id="omap">
        <result property="id" column="id"/>
        <result property="identify" column="identify"/>        
        <result property="orderType" column="orderType"/>
        <result property="orderDate" column="orderDate"/>
        <result property="amountRMB" column="amountRMB"/>
        <result property="totalAmount" column="totalAmount"/>
        <result property="billStatus" column="billStatus"/>
        <result property="remark" column="mib_remark"/>
        <result property="status" column="mib_status"/>
        <association property="customer" javaType="Customer">
        	<id property="id" column="c_id"/>
        	<result property="name" column="c_name"/>
        	<result property="contacts" column="c_contacts"/>
        	<result property="phone" column="c_phone"/>
        	<result property="fax" column="c_fax"/>        	
        </association>
        <association property="appointment" javaType="OrderAppointment">
        	<id property="orderId" column="orderId"/>
        	<result property="deliveryTerm" column="deliveryTerm"/>
        	<result property="shippingAddress" column="shippingAddress"/>
        	<result property="needInvoice" column="needInvoice"/>   
        	<result property="invoiceCategory" column="invoiceCategory"/>   
        	<result property="paymentMethod" column="paymentMethod"/>   
        	<result property="exchangeRate" column="exchangeRate"/>   
        	<result property="paymentAppointment" column="paymentAppointment"/>   
        	<result property="otherAppointment" column="otherAppointment"/> 
        </association>
        <collection property="items" ofType="OrderItem">
            <id property="id" column="i_id" />
            <result property="orderId" column="i_orderId"/>
            <result property="quantity" column="i_quantity"/>
	        <result property="price" column="i_price"/>
	        <result property="amount" column="i_amount"/>
	        <result property="remark" column="i_remark"/>
	        <result property="status" column="i_status"/>
	        <association property="product" javaType="Product">
	        	<id property="id" column="p_id"/>
	        	<result property="name" column="p_name"/>
	        	<result property="model" column="p_model"/>
        	</association>
        </collection>
    </resultMap>
    <resultMap type="OrderProduct" id="opmap">
    	<result property="id" column="id"/>
    	<result property="orderQuantity" column="orderQuantity"/>
    	<result property="orderAmount" column="orderAmount"/>
    	<result property="inQuantity" column="inQuantity"/>
    	<result property="outQuantity" column="outQuantity"/>
    	<association property="product" javaType="Product">
        	<id property="id" column="p_id"/>
        	<result property="code" column="code"/>
        	<result property="model" column="model"/>
        	<result property="storage" column="storage"/>
       	</association>
    </resultMap>    
    
    
    <select id="getPageResult" parameterType="OrderFilter" resultMap="omap">
        select o.*, a.*, c.id as c_id, c.name as c_name             
          from tbl_order o, 
               tbl_order_appointment a,
               tbl_customer c             
         where o.status = '1'
           and o.id = a.orderId
           and o.customerId = c.id
          <if test="identify != null and identify !=''">
          and identify like #{identify} 
          </if>
          <if test="orderType != null and orderType !=0">
          and orderType = #{orderType} 
          </if>
          <if test="billStatus != null and billStatus !=''">
          and billStatus = #{billStatus} 
          </if>
          <if test="customerId != null and customerId !=''">
          and c.id = #{customerId} 
          </if>
          <if test="startDate != null and startDate !=''">
          and orderDate &gt;= #{startDate} 
          </if>
          <if test="endDate != null and endDate !=''">
          and orderDate &lt;= #{endDate} 
          </if>
          order by orderDate desc
          limit #{pageOffset},#{pageSize}
    </select> 
    <select id="count" parameterType="OrderFilter" resultType="int">
        select count(1)               
          from tbl_order o, 
               tbl_order_appointment a,
               tbl_customer c             
         where o.status = '1'
           and o.id = a.orderId
           and o.customerId = c.id
          <if test="identify != null and identify !=''">
          and identify like #{identify} 
          </if>
          <if test="orderType != null and orderType !=0">
          and orderType = #{orderType} 
          </if>
          <if test="billStatus != null and billStatus !=''">
          and billStatus = #{billStatus} 
          </if>
          <if test="customerId != null and customerId !=''">
          and c.id = #{customerId} 
          </if>
          <if test="startDate != null and startDate !=''">
          and orderDate &gt;= #{startDate} 
          </if>
          <if test="endDate != null and endDate !=''">
          and orderDate &lt;= #{endDate} 
          </if>
    </select> 
    
    <select id="query" parameterType="OrderFilter" resultMap="omap">
        select o.*, a.*, c.id as c_id, c.name as c_name            
          from tbl_order o, 
               tbl_order_appointment a,
               tbl_customer c             
         where o.status = '1'
           and o.id = a.orderId
           and o.customerId = c.id
          <if test="identify != null and identify !=''">
          and identify like #{identify} 
          </if>
          <if test="orderType != null and orderType !=0">
          and orderType = #{orderType} 
          </if>
          <if test="billStatus != null and billStatus !=''">
          and billStatus = #{billStatus} 
          </if>
          <if test="customerId != null and customerId !=''">
          and c.id = #{customerId} 
          </if>
          <if test="startDate != null and startDate !=''">
          and orderDate &gt;= #{startDate} 
          </if>
          <if test="endDate != null and endDate !=''">
          and orderDate &lt;= #{endDate} 
          </if>
          order by orderDate desc
    </select> 
    
    <select id="getAll" resultMap="omap">
    	select * from tbl_order where status = '1'
    </select>
    
    <select id="getById" parameterType="String" resultMap="omap">
        select o.*, a.*,
               c.id as c_id,
               c.name as c_name,
               c.contacts as c_contacts,
               c.phone as c_phone,
               c.fax as c_fax,
               i.id as i_id,
               i.orderId as i_orderId,
               i.quantity as i_quantity,
               i.price as i_price,
               i.amount as i_amount,
               p.id as p_id,
               p.name as p_name,
               p.model as p_model
          from tbl_order o, 
               tbl_order_appointment a,
               tbl_order_item i,
               tbl_customer c,
               tbl_product p      
         where o.id = #{id}
           and o.id = a.orderId
           and o.customerId = c.id
           and o.id = i.orderId
           and i.productId = p.id
    </select>
    
    <select id="queryOrderProduct" parameterType="OrderFilter" resultMap="opmap">
        select id, 
               p_id, 
               code, 
               model, 
               storage, 
               case when orderQuantity is null then 0 else orderQuantity end as orderQuantity,
               case when orderAmount is null then 0 else orderAmount end as orderAmount,
               case when inQuantity is null then 0 else inQuantity end as inQuantity,
               case when outQuantity is null then 0 else outQuantity end as outQuantity
          from (
            select * from
	        (select id, id as p_id, code, model, storage from tbl_product 
	         where status = '1'
	          <if test="productId != null and productId !=''">
		       and oi.productid = #{productId} 
		      </if>) l
	        left join
		    (select productid, sum(orderquantity) as orderQuantity, sum(orderamount) as orderAmount, sum(inQuantity) as inQuantity, sum(outQuantity) as outQuantity
			  from	
				( 
				select oi.productid, sum(oi.quantity) orderQuantity, sum(oi.amount) orderAmount , 0 as inQuantity, 0 as outQuantity
					from tbl_order_item oi, tbl_order o
				 where o.status = '1'
		          and o.id = oi.orderid
		          <if test="startDate != null and startDate !=''">
		          and orderDate &gt;= #{startDate} 
		          </if>
		          <if test="endDate != null and endDate !=''">
		          and orderDate &lt;= #{endDate} 
		          </if>
		          <if test="productId != null and productId !=''">
		          and oi.productid = #{productId} 
		          </if>
				 group by oi.productid
				 
	            union all
				
				select d.productid, 0 as orderQuantity, 0 as orderAmount, sum(d.quantity) inQuantity, 0 as outQuantity
					from tbl_bill_dtl_productin d, tbl_bill_productin i
				 where d.status = '1'
				   and d.billId = i.id
				  <if test="startDate != null and startDate !=''">
		          and billDate &gt;= #{startDate} 
		          </if>
		          <if test="endDate != null and endDate !=''">
		          and billDate &lt;= #{endDate} 
		          </if>
		          <if test="productId != null and productId !=''">
		          and oi.productid = #{productId} 
		          </if>
				 group by d.productid
				
	            union all
				
				select d.productid, 0 as orderQuantity, 0 as orderAmount, 0 as inQuantity, sum(d.quantity) outQuantity
					from tbl_bill_dtl_productout d, tbl_bill_productout ot
				 where d.status = '1'
				   and d.billId = ot.id
				  <if test="startDate != null and startDate !=''">
		          and billDate &gt;= #{startDate} 
		          </if>
		          <if test="endDate != null and endDate !=''">
		          and billDate &lt;= #{endDate} 
		          </if>
		          <if test="productId != null and productId !=''">
		          and oi.productid = #{productId} 
		          </if>
				 group by d.productid
				) un
				group by productid)r
			on l.p_id = r.productid	
		)tbl 
		order by orderQuantity desc
    </select>
    
    <select id="getOrderProductPageResult" parameterType="OrderFilter" resultMap="opmap">
        select id, 
               p_id, 
               code, 
               model, 
               storage, 
               case when orderQuantity is null then 0 else orderQuantity end as orderQuantity,
               case when orderAmount is null then 0 else orderAmount end as orderAmount,
               case when inQuantity is null then 0 else inQuantity end as inQuantity,
               case when outQuantity is null then 0 else outQuantity end as outQuantity
          from (
            select * from
	        (select id, id as p_id, code, model, storage from tbl_product 
	         where status = '1'
	          <if test="productId != null and productId !=''">
		       and oi.productid = #{productId} 
		      </if>
		      ) l
	        left join
		    (select productid, sum(orderquantity) as orderQuantity, sum(orderamount) as orderAmount, sum(inQuantity) as inQuantity, sum(outQuantity) as outQuantity
			  from	
				( 
				select oi.productid, sum(oi.quantity) orderQuantity, sum(oi.amount) orderAmount , 0 as inQuantity, 0 as outQuantity
					from tbl_order_item oi, tbl_order o
				 where o.status = '1'
		          and o.id = oi.orderid
		          <if test="startDate != null and startDate !=''">
		          and orderDate &gt;= #{startDate} 
		          </if>
		          <if test="endDate != null and endDate !=''">
		          and orderDate &lt;= #{endDate} 
		          </if>
		          <if test="productId != null and productId !=''">
		          and oi.productid = #{productId} 
		          </if>
				 group by oi.productid
				 
	            union all
				
				select d.productid, 0 as orderQuantity, 0 as orderAmount, sum(d.quantity) inQuantity, 0 as outQuantity
					from tbl_bill_dtl_productin d, tbl_bill_productin i
				 where d.status = '1'
				   and d.billId = i.id
				  <if test="startDate != null and startDate !=''">
		          and billDate &gt;= #{startDate} 
		          </if>
		          <if test="endDate != null and endDate !=''">
		          and billDate &lt;= #{endDate} 
		          </if>
		          <if test="productId != null and productId !=''">
		          and oi.productid = #{productId} 
		          </if>
				 group by d.productid
				
	            union all
				
				select d.productid, 0 as orderQuantity, 0 as orderAmount, 0 as inQuantity, sum(d.quantity) outQuantity
					from tbl_bill_dtl_productout d, tbl_bill_productout ot
				 where d.status = '1'
				   and d.billId = ot.id
				  <if test="startDate != null and startDate !=''">
		          and billDate &gt;= #{startDate} 
		          </if>
		          <if test="endDate != null and endDate !=''">
		          and billDate &lt;= #{endDate} 
		          </if>
		          <if test="productId != null and productId !=''">
		          and oi.productid = #{productId} 
		          </if>
				 group by d.productid
				) un
				group by productid)r
			on l.p_id = r.productid	
		)tbl
		order by orderQuantity desc
		limit #{pageOffset},#{pageSize}
    </select>
    
    <select id="countOrderProduct" parameterType="OrderFilter" resultType="int">
    	select count(1) from tbl_product 
         where status = '1'
          <if test="productId != null and productId !=''">
	       and oi.productid = #{productId} 
	      </if>
    </select>
    
    <!-- <select id="queryOrderProduct" parameterType="OrderFilter" resultMap="opmap">
	    select p.id, p.id as p_id, p.code, p.model, p.storage, op.* from tbl_product p,
			(select productid, sum(orderquantity) orderQuantity, sum(orderamount) orderAmount, sum(inquantity) inQuantity, sum(outquantity) outQuantity from(
			  select odr.productId, orderquantity, orderamount, inquantity, outquantity from
						( 
						select o.id oid, oi.productid, sum(oi.quantity) orderquantity, sum(oi.amount) orderamount 
							from tbl_order_item oi, tbl_order o
						 where o.status = '1'
				          and o.id = oi.orderid
				          <if test="startDate != null and startDate !=''">
				          and orderDate &gt;= #{startDate} 
				          </if>
				          <if test="endDate != null and endDate !=''">
				          and orderDate &lt;= #{endDate} 
				          </if>
				          <if test="productId != null and productId !=''">
				          and oi.productid = #{productId} 
				          </if>
						 group by oi.productid
						)odr 
			    left join
						(
						select o.id oid, d.productid, sum(d.quantity) inquantity 
							from tbl_bill_dtl_productin d, tbl_bill_productin i, tbl_order o
						 where d.status = '1'
			         and o.id = i.orderid
							 and d.billId = i.id
						 group by o.id, d.productid
						)pin
			      on odr.oid = pin.oid and odr.productid = pin.productid
			    left join
						(
						select o.id oid, d.productid, sum(d.quantity) outquantity
							from tbl_bill_dtl_productout d, tbl_bill_productout ot, tbl_order o
						 where d.status = '1'
			         and o.id = ot.orderid
							 and d.billId = ot.id
						 group by o.id, d.productid
						)pout
			      on odr.oid = pout.oid and odr.productid = pout.productid 
			)tbl group by productid)op
			where p.id = op.productid
			  and p.status = '1'
    </select>
    
    <select id="getOrderProductPageResult" parameterType="OrderFilter" resultMap="opmap">
	    select p.id, p.id as p_id, p.code, p.model, p.storage, op.* from tbl_product p,
			(select productid, sum(orderquantity) orderQuantity, sum(orderamount) orderAmount, sum(inquantity) inQuantity, sum(outquantity) outQuantity from(
			  select odr.productId, orderquantity, orderamount, inquantity, outquantity from
						( 
						select o.id oid, oi.productid, sum(oi.quantity) orderquantity, sum(oi.amount) orderamount 
							from tbl_order_item oi, tbl_order o
						 where o.status = '1'
				          and o.id = oi.orderid
				          <if test="startDate != null and startDate !=''">
				          and orderDate &gt;= #{startDate} 
				          </if>
				          <if test="endDate != null and endDate !=''">
				          and orderDate &lt;= #{endDate} 
				          </if>
				          <if test="productId != null and productId !=''">
				          and oi.productid = #{productId} 
				          </if>
						 group by oi.productid
						 limit #{pageOffset},#{pageSize}
						)odr 
			    left join
						(
						select o.id oid, d.productid, sum(d.quantity) inquantity 
							from tbl_bill_dtl_productin d, tbl_bill_productin i, tbl_order o
						 where d.status = '1'
			         and o.id = i.orderid
							 and d.billId = i.id
						 group by o.id, d.productid
						)pin
			      on odr.oid = pin.oid and odr.productid = pin.productid
			    left join
						(
						select o.id oid, d.productid, sum(d.quantity) outquantity
							from tbl_bill_dtl_productout d, tbl_bill_productout ot, tbl_order o
						 where d.status = '1'
			         and o.id = ot.orderid
							 and d.billId = ot.id
						 group by o.id, d.productid
						)pout
			      on odr.oid = pout.oid and odr.productid = pout.productid 
			)tbl group by productid)op
			where p.id = op.productid
			  and p.status = '1'
    </select>
    
    <select id="countOrderProduct" parameterType="OrderFilter" resultType="int">
    	select count(1) from
			(select productid, sum(orderquantity) orderquantity, sum(orderamount) orderamount, sum(inquantity) inquantity, sum(outquantity) outquantity from(
			  select odr.productId, orderquantity, orderamount, inquantity, outquantity from
						( 
						select o.id oid, oi.productid, sum(oi.quantity) orderquantity, sum(oi.amount) orderamount 
							from tbl_order_item oi, tbl_order o
						 where o.status = '1'
				          and o.id = oi.orderid
				          <if test="startDate != null and startDate !=''">
				          and orderDate &gt;= #{startDate} 
				          </if>
				          <if test="endDate != null and endDate !=''">
				          and orderDate &lt;= #{endDate} 
				          </if>
				          <if test="productId != null and productId !=''">
				          and oi.productid &lt;= #{productId} 
				          </if>
						)odr 
			    left join
						(
						select o.id oid, d.productid, sum(d.quantity) inquantity 
							from tbl_bill_dtl_productin d, tbl_bill_productin i, tbl_order o
						 where d.status = '1'
			         and o.id = i.orderid
							 and d.billId = i.id
						 group by o.id, d.productid
						)pin
			      on odr.oid = pin.oid and odr.productid = pin.productid
			    left join
						(
						select o.id oid, d.productid, sum(d.quantity) outquantity
							from tbl_bill_dtl_productout d, tbl_bill_productout ot, tbl_order o
						 where d.status = '1'
			         and o.id = ot.orderid
							 and d.billId = ot.id
						 group by o.id, d.productid
						)pout
			      on odr.oid = pout.oid and odr.productid = pout.productid 
			)tbl group by productid)op
    </select> -->
    
    <insert id="insert" parameterType="Order">
        insert into tbl_order(id, identify, orderType, orderDate, amountRMB, totalAmount, billStatus, customerId, modifydate, remark, status)  
          values(#{id}, #{identify}, #{orderType}, #{orderDate}, #{amountRMB}, #{totalAmount}, #{billStatus}, #{customer.id}, sysdate(), #{remark}, #{status})
    </insert>
    
    <update id="update" parameterType="Order">
    	update tbl_order set
    	  identify = #{identify},
    	  orderType = #{orderType},
    	  orderDate = #{orderDate},
    	  amountRMB = #{amountRMB}, 
    	  totalAmount = #{totalAmount},
    	  billStatus = #{billStatus},
    	  customerId = #{customer.id},
    	  remark = #{remark},
    	  modifydate = sysdate()
        where id = #{id}
    </update>
    
    <update id="delete" parameterType="String">
        update tbl_order set 
          status = '0',
          modifydate = sysdate()
        where id = #{id}
    </update>
    
    <insert id="insertAppointment" parameterType="OrderAppointment">
        insert into tbl_order_appointment(orderId, deliveryTerm, shippingAddress, needInvoice, invoiceCategory, paymentMethod, exchangeRate, paymentAppointment, otherAppointment)  
          values(#{orderId}, #{deliveryTerm}, #{shippingAddress}, #{needInvoice}, #{invoiceCategory}, #{paymentMethod}, #{exchangeRate}, #{paymentAppointment}, #{otherAppointment})
    </insert>
    
    <update id="updateAppointment" parameterType="OrderAppointment">
    	update tbl_order_appointment set
    	  deliveryTerm = #{deliveryTerm},
    	  shippingAddress = #{shippingAddress},
    	  needInvoice = #{needInvoice},
    	  invoiceCategory = #{invoiceCategory}, 
    	  paymentMethod = #{paymentMethod},
    	  exchangeRate = #{exchangeRate},
    	  paymentAppointment = #{paymentAppointment},
    	  otherAppointment = #{otherAppointment}
        where orderId = #{orderId}
    </update>
    
    <update id="deleteAppointment" parameterType="String">
        delete from tbl_order_appointment set 
         where orderId = #{orderId}
    </update>
    
    <insert id="insertItems" parameterType="java.util.List">
        insert into tbl_order_item(id, orderId, productId, quantity, price, amount, modifydate, remark, status) 
             values
             <foreach collection="list" item="dtl" index="index" separator=",">
                 (#{dtl.id} , #{dtl.orderId}, #{dtl.product.id}, #{dtl.quantity}, #{dtl.price}, #{dtl.amount}, sysdate(), #{dtl.remark}, '1')
             </foreach>
    </insert>
    
    <update id="deleteItemsByOrderId" parameterType="String">
        update tbl_order_item set 
          status = '0',
          modifydate = sysdate()
        where orderId = #{orderId}
    </update>
</mapper>