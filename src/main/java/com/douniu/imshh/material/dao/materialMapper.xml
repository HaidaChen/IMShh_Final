<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.douniu.imshh.material.dao.IMaterialDao">
    <resultMap type="Material" id="mtlmap">
        <result property="id" column="id"/>
        <result property="name" column="name"/>
        <result property="category" column="category"/>
        <result property="specification1" column="specification1"/>
        <result property="specification2" column="specification2"/>
        <result property="specification3" column="specification3"/>
        <result property="unit" column="unit"/>
        <result property="storage" column="storage"/>
        <result property="supplierNames" column="supplierNames"/>
        <result property="remark" column="remark"/>
        <result property="status" column="status"/>
    </resultMap>
    
    <select id="getPageResult" parameterType="MaterialFilter" resultMap="mtlmap">
        select m.id, m.name, m.specification1, m.specification2, m.specification3, m.unit, m.storage, c.name as category, GROUP_CONCAT(concat(ms.id,':', ms.name)) as supplierNames
          from tbl_material m
		  left join tbl_material_supplier ms 
            on FIND_IN_SET(m.category, ms.categoryIds)
          left join tbl_material_category c
            on m.category = c.id 
         where m.status = '1'
          <if test="name != null and name !=''">
          and m.name like #{name} 
          </if>
          <if test="category != null and category !=''">
          and m.category = #{category} 
          </if>
          <if test="supplier != null and supplier !=''">
          and ms.id = #{supplier}
          </if>
          group by m.id
          order by m.modifydate desc
          limit #{pageOffset},#{pageSize}
    </select> 
    <select id="query" parameterType="MaterialFilter" resultMap="mtlmap">
        select m.id, m.name, m.specification1, m.specification2, m.specification3, m.unit, m.storage, c.name as category, GROUP_CONCAT(ms.name) as supplierNames
          from tbl_material m
		  left join tbl_material_supplier ms 
            on FIND_IN_SET(m.category, ms.categoryIds)
          left join tbl_material_category c
            on m.category = c.id 
         where m.status = '1'
        <if test="name != null and name !=''">
          and m.name like #{name} 
          </if>
          <if test="category != null and category !=''">
          and m.category = #{category} 
          </if>
          <if test="supplier != null and supplier !=''">
          and ms.id = #{supplier}
          </if>
          group by m.id    
          order by m.modifydate desc
    </select>
    
    <select id="count" parameterType="Material" resultType="int">
        select count(1) from (
        select m.*, GROUP_CONCAT(ms.name) as supplierNames
          from tbl_material m
		  left join tbl_material_supplier ms 
            on FIND_IN_SET(m.category, ms.categoryIds) 
         where m.status = '1'
          <if test="name != null and name !=''">
          and m.name like #{name} 
          </if>
          <if test="category != null and category !=''">
          and m.category = #{category} 
          </if>
          <if test="supplier != null and supplier !=''">
          and ms.id = #{supplier}
          </if>
          group by m.id
          )mm
    </select>   
    
    <select id="getById" parameterType="String" resultMap="mtlmap">
        select * from tbl_material where id = #{id}
    </select>
    
    <insert id="insert" parameterType="Material">
        insert into tbl_material(id, name, specification1, specification2, specification3, category, unit, modifydate, remark, status)  
          values(#{id}, #{name}, #{specification1}, #{specification2}, #{specification3}, #{category}, #{unit}, sysdate(), #{remark}, #{status})
    </insert>
    
    <insert id="batchInsert" parameterType="java.util.List">
        insert into tbl_material(id, name, specification1, specification2, specification3, category, unit, modifydate, remark, status) 
             values
             <foreach collection="list" item="mtl" index="index" separator=",">
                 (#{mtl.id} , #{mtl.name}, #{mtl.specification1}, #{mtl.specification2}, #{mtl.specification3}, #{mtl.category}, #{mtl.unit}, sysdate(), #{mtl.remark}, '1')
             </foreach>
    </insert>
    
    <update id="setStorage" parameterType="Material">
        update tbl_material set 
          storage = #{storage},
          modifydate = sysdate()
    where id = #{id}
    </update>
    
    <update id="delete" parameterType="String">
        update tbl_material set 
          status = '0',
          modifydate = sysdate()
        where id = #{id}
    </update>
    
</mapper>