<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.douniu.imshh.sys.dao.IUserDao">
    <resultMap type="User" id="usermap">
        <result property="id" column="id"/>
        <result property="userName" column="userName"/>
        <result property="password" column="password"/>
        <result property="fullName" column="fullName"/>
        <result property="homePage" column="homePage"/>
        <result property="remark" column="remark"/>
        <result property="status" column="status"/>
        
        <collection column="id" property="roles" ofType="Role"
		   select="selectRolesByUser"> 
		   	<id column="id" property="id"/>
		    <result column="name" property="name"/>
		    <result column="remark" property="remark"/>
		</collection>
    </resultMap>
    
    <select id="selectRolesByUser" parameterType="String" resultType="Role">
        select r.* from t_role r, t_user_role ur where r.id = ur.roleId and ur.userId = #{id}
    </select>
    
    <select id="getPageResult" parameterType="SystemFilter" resultMap="usermap">
        select * from t_user where status = 1
        <if test="username != null and username !=''">
          and username like #{username}          
        </if>         
          order by modifydate desc
          limit #{pageOffset},#{pageSize}
    </select>
    
    <select id="count" parameterType="SystemFilter" resultType="int">
        select count(1) from t_user where status = 1
        <if test="username != null and username !=''">
          and username like #{username}         
        </if>
    </select>
    
   <select id="queryWithInvalid" parameterType="SystemFilter" resultMap="usermap">
        select * from t_user where 1 = 1
        <if test="username !=''">
          and username like #{"username !=''"}        
        </if>         
          order by modifydate desc
    </select>
    
    <select id="findById" parameterType="String" resultMap="usermap">
        select * from t_user where id = #{id}
    </select>
    
    <insert id="insert" parameterType="User">
        insert into t_user(id, userName, password, fullName, modifydate, status) 
          values(#{id}, #{userName}, #{password}, #{fullName}, sysdate(), '1')
    </insert>
    
    <update id="update" parameterType="User">
        update t_user set 
          userName = #{userName},
          fullName = #{fullName},
          modifydate = sysdate()
    where id = #{id}
    </update>
    
    <update id="setHomePage" parameterType="User">
        update t_user set 
          homePage = #{1}
    where id = #{0}
    </update>
    
    <update id="delete" parameterType="String">
        update t_user set 
          status = '0',
          modifydate = sysdate()
        where id = #{id}
    </update>
    
    <select id="findByNmPwd" parameterType="User" resultMap="usermap">
    	select * from t_user where status = '1'
          and username = #{userName}
          and password = #{password}
    </select>
    
    <select id="findByName" parameterType="String" resultType="User">
    	select * from t_user where 1 = 1
          and username = #{userName}
    </select>
    
    <delete id="deleteRoleRelation" parameterType="String">
    	delete from t_user_role where userId = #{userId}
    </delete>
    
    <insert id="addRoleRelation" parameterType="java.util.List">        
        insert into t_user_role(userid, roleid) 
             values
             <foreach collection="list" item="ur" index="index" separator=",">
                 (#{ur.userId}, #{ur.roleId})
             </foreach>
    </insert>
</mapper>